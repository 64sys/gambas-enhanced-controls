#ButtonSquare
UserControl
C
_Properties
C
s
"*,Text,Picture,PullDown,Formulario"
_DefaultEvent
C
s
"Click"
_DefaultSize
C
s
"8,8"
_Similar
C
s
"Button"
_DrawWith
C
s
"Button"
:Click
:


Picture
p
Picture

Text
p
s

PullDown
p
b

Formulario
p
v

_new
m


da_Draw
m


da_MouseDown
m


da_MouseUp
m


da_Enter
m


da_Leave
m


da_GotFocus
m


da_LostFocus
m


#FileBox
UserControl
C
_Properties
C
s
"*,Action,Border=True"
_DefaultEvent
C
s
"Click"
_DefaultSize
C
s
"32,4"
_Similar
C
s
"TextBox"
_Group
C
s
"Chooser"
:Click
:


:Change
:


Value
p
s

Border
p
b

_new
m


Button_Click
m


#ProgressBarText
UserControl
C
_IsControl
C
b
T
_Properties
C
s
"*,Value,ValueBis,Border=True,ColorBar,ColorBarBis,Text,TextBis,Label=true,LabelBis,MaxValue=100,MaxValueBis=100,Middle,Motif,MinValue,MinValueBis,Picture,Reverse"
_Group
C
s
"Form"
_DefaultEvent
C
s
"Enter"
_DefaultSize
C
s
"24,6"
_Similar
C
s
"ProgressBar"
_DrawWith
C
s
"ProgressBar"
Picture
p
Picture

Border
p
b

ColorBar
p
i

ColorBarBis
p
i

Label
p
b

LabelBis
p
b

MaxValue
p
i

MaxValueBis
p
i

Middle
p
b

MinValue
p
i

MinValueBis
p
i

Motif
p
i

Reverse
p
b

Text
p
s

TextBis
p
s

Value
p
i

ValueBis
p
i

_new
m


DraArea_Draw
m


#ProgressbarVertical
UserControl
C
_Properties
C
s
"*,Action,Label=True,Border=True,Pulse,Roundness"
_Group
C
s
"Form"
_DefaultSize
C
s
"6,24"
_DefaultEvent
C
s
"MouseDown"
_Similar
C
s
"ProgressBar"
_DrawWith
C
s
"ProgressBar"
Value
p
f

Label
p
b

Border
p
b

Pulse
p
b

Roundness
p
i

_new
m


Canvas_Draw
m


Canvas_Arrange
m


Timer_Timer
m


#TextBoxExplain
TextBox
C
_Properties
C
s
"*,Explanation"
_Similar
C
s
"TextBox"
_DrawWith
C
s
"TextBox"
Explanation
p
s

_new
m


Before_GotFocus
m


Foreground
p
i

After_LostFocus
m


#TextList
UserControl
C
_Properties
C
s
"*,Text,List,Height_List,ShowsAllZero"
_Similar
C
s
"TextBox"
_DrawWith
C
s
"TextBox"
Values
p
String[]

List
p
String[]

Cle
p
s

Text
p
s

Height_List
p
f

:Change
:


:Activate
:


:KeyPress
:


ShowsAllZero
p
b

_new
m


txt_Change
m


txt_Keypress
m


txt_MouseDown
m


lvw_DblClick
m


lvw_Leave
m


#_Query

C
sqlString
p
s

fields
p
s

from
r
s

where
r
s

'Where clause: $scope and ($filter) - Cláusula where a aplicar es $scope and ($filter)
filter
p
s

'Filter stablished by manipulation of dbGrid - Filtro establecido por la manipulación del dbGrid
scope
p
s

order
p
s

since
p
i

howmany
p
i

strSplit
m
Collection
(cadena)s(asep)String[];
#dbComboBox
ComboBox
C
_Properties
C
s
"*,sqlstring,listfields,fieldkey,conexion{Connection},value"
_Group
C
s
"Chooser"
_Similar
C
s
"ComboBox,ListBox,dbListBox,ListEditor"
sqlstring
p
s

fieldkey
p
s

'Name of field to return - Nombe de Campo a devolver
listfields
p
String[]

value
p
v

'Fieldkey's value for the selected line - Valor de fieldkey de la línea elegida
conexion
p
Connection

listkeys
r
Variant[]

_new
m


Clear
m


populate
m


#dbGrid
GridView
C
_Properties
C
s
"*,Conexion{Connection},sqlString,colReturn,widths,titles,bgcolor{Color}=-1,forecolor{Color}=-1,alternate=T,selectedcolor{Color}=-1"
_Group
C
s
"Chooser"
_Similar
C
s
"GridView,TableView"
_drawWith
C
s
"GridView"
conexion
p
Connection

sqlString
p
s

widths
p
String[]

titles
p
String[]

bgcolor
p
i

forecolor
p
i

alternate
p
b

selectedcolor
p
i

query
p
_Query

'Objeto de la clase _Query que contiene el desglose de sqlstring
rslt
r
Result

isShift
r
b

'Indica si se tenía mayúscula pulsada mientras se disparaba un evento
colReturn
p
i

value
r
String[]

isControl
r
b

_new
m


clear
m


grid_data
m

(row)i(col)i
populate
m
b
[(force)b]
grid_KeyPress
m


grid_KeyRelease
m


grid_ColumnClick
m

(Column)i
dbcomillas
m
s
(columna)s
grid_click
m


grid_ColumnResize
m

(Column)i
#dbGridFilter
UserControl
C
_Properties
C
s
"*,conexion{Connection},sqlstring,colReturn,widths,title,bgcolor{Color}=-1,forecolor{Color}=-1,alternate=-1,selectedcolor{Color}=-1,mode,subMenu{Menu},menuDefault=-1,showButtons=-1,showExportMenu=-1,posButtons{Align.Bottom;Right}=Bottom"
_Group
C
s
"Chooser"
_Similar
C
s
"GridView"
_drawWith
C
s
"TableView"
:Click
:


:DblClick
:


:Action_Activate
:

(opcion)s
conexion
p
Connection

sqlstring
p
s

colReturn
p
i

widths
p
String[]

titles
p
String[]

mode
p
i

bgcolor
p
i

forecolor
p
i

alternate
p
b

selectedcolor
p
i

subMenu
p
s

menuDefault
p
b

grid
p
DbGrid

showButtons
p
b

posButtons
p
i

showExportMenu
p
b

value
r
String[]

pnBotones
r
Panel

'panel para añadir botones al control
isShift
r
b

isControl
r
b

_new
m


populate
m

[(Force)b]
subMenus
m

(opcion)s
Grid_Click
m


#dbListBox
ListBox
C
_Properties
C
s
"*,sqlstring,listfields,fieldkey,conexion{Connection},value"
_Group
C
s
"Chooser"
_Similar
C
s
"ListBox,ComboBox,dbComboBox,ListEditor"
sqlstring
p
s

'Table name of sql sentence. Tabla o consulta sql
fieldkey
p
s

'name of field to return - Nombe de Campo a devolver
listfields
p
String[]

value
p
v

'fieldkey's value for the selected line - valore de fieldkey de las líneas elegidas
Conexion
p
Connection

listkeys
r
Variant[]

_new
m


Clear
m


populate
m


#dbSqlTree
UserControl
C
_Properties
C
s
"*,conexion{Connection},sqlString,fieldkey,icons,Border=-1"
_Group
C
s
"Chooser"
_Similar
C
s
"TreeView,ListView,ColumnView"
:Click
:


sqlString
p
s

fieldkey
p
s

conexion
p
Connection

separator
p
s

icons
p
String[]

border
p
b

keys
r
v

filter
r
s

Text
r
s

PreviousText
r
s

Field
r
s

PreviousField
r
s

arbol
v
TreeView

_new
m


Arbol_Click
m


populate
m


strSplit
m
Collection
(cadena)s(asep)String[];
#htEdit
UserControl
C
_Properties
C
s
"*,HTML,Text,Border,ReadOnly,ShowControls=True,Value"
_DrawWith
C
s
"-"
_Group
C
s
"View"
_Similar
C
s
"TextArea"
HTML
p
s

Value
p
s

Border
p
b

Text
r
s

ShowControls
p
b

ReadOnly
p
b

wView
v
WebView

_new
m


