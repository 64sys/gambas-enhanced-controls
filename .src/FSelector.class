' Gambas class file

' GEC
'
' Copyright (C) Martín Belmonte
'
' This program is free software; you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation; either version 2 of the License, or
' (at your option) any later version.
'
' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.
'
' You should have received a copy of the GNU General Public License
' along with this program; if not, write to the Free Software
' Foundation, Inc., 51 Franklin St, Fifth Floor,
' Boston, MA  02110-1301  USA
'
Private Controles As Variant[]

Public Sub Form_Open()

  Dim n As Integer
  Dim hb As HBox
  Dim ck As CheckBox

  controles = New Variant[]
  Controles.Add(["dbComboBox", "Combobox que muestra campos de una consulta SQL y devuelve el Valor especificado", ""])
  Controles.Add(["dbGrid", "Gridview que muestra el resultado de una consulta SQL permitiendo ordenaciones por columnas", ""])
  Controles.Add(["dbGridFilter", "dbGrid que, además, permite hacer filtros sobre la consulta sql original", ""])
  Controles.Add(["dbSqlTree", "Muestra una consulta SQL ordenada como un TreeView", ""])
  Controles.Add(["dbListBox", "Listbox que muestra campos de una consulta SQL y devuelve el Valor especificado", ""])
  Controles.Add(["htEdit", "Editor de HTML sencillo", "gb.form.mdi,gb.qui.qt,gb.gui.qt.webkit"])
  Controles.Add(["FileBox", "Permite seleccionar un fichero", ""])
  Controles.Add(["ButtonSquare", "Botón que permite ubicar el texto debajo de la imagen", ""])
  Controles.Add(["ProgressBarText", "ProgressBar que permite incluir texto", ""])
  Controles.Add(["TextBoxExplain", "TextBox que muestra un texto en color distinto cuando está vacío", ""])
  Controles.Add(["TextList", "", ""])
  Controles.Add(["ProgressbarVertical", "ProgressBar en sentido Vertical", ""])
  Controles.Add(["MData", "", ""])
  Controles.Add(["Msys", "", ""])
  Controles.Add(["MUtility", "", ""])

  For n = 0 To Controles.count - 1
    hb = New HBox(panel1)
    hb.height = 28
    hb.width = panel1.Width
    ck = New CheckBox(hb)
    ck.Expand = True
    ck.Text = controles[n][0]
    ck.Tooltip = controles[n][1]
  Next

End

Public Sub ToolButton1_Click()

  chequear(["dbComboBox", "dbListBox", "dbGrid", "dbGridFilter", "htEdit", "FileBox", "dbSqlTree"])
  Connections["provincias"].host = Application.Path
  If Not Connections["provincias"].Opened Then Connections["provincias"].Open
  FDBControls.Show()

End

Public Sub ToolButton2_Click()

  chequear(["ButtonSquare", "TextList", "TextBoxExplain", "ProgressBarText"])
  FXControls.Show()

End

Public Sub ToolButton3_Click()

  chequear(["ProgressBarText"])
  FProgbar.Show()

End

Public Sub ToolButton4_Click()

  chequear(["MData", "Msys", "MUtility"])

End

Private Sub chequear(aTexts As String[])

  Dim ckb As Object
   
  For Each ckb In Me.Controls
    If ckb Is CheckBox Then
        ckb.value = (aTexts.Find(ckb.text) > -1)
    Endif
  Next

End

Public Sub btoLink_Click()

  Dim proyecto, origen, requeridos As String
  Dim n As Integer
  Dim ctrl As Object
  Dim strExt As String 
  Dim strDir As String 

  n = Message.Question("Si enlazas los controles a tu proyecto, para modificar o añadir algo en ellos, tendrás que hacerlo en éste proyecto. Los cambios se propagarán automáticamente a todos los proyectos enlazados.", "Enlazar", "Cancelar")
  If n = 2 Then Return
  If Dialog.SelectDirectory() Then Return
  proyecto = Dialog.Path
  If Not Exist(proyecto &/ ".hidden/control") Then Shell "mkdir -p " & proyecto &/ ".hidden/control"
  For Each ctrl In Me.Controls
    If ctrl Is CheckBox Then
      If Left(LCase(ctrl.Text), 1) = "m" Then
        strExt = ".module"                  
        strDir = "xutilities"               
      Else                           
        strExt = ".class"            
        strDir = ""        
      End If
      If ctrl.Value Then
        Try Copy Application.path &/ ".hidden/control" &/ LCase(ctrl.text) & ".png" To proyecto &/ ".hidden/control" &/ LCase(ctrl.text) & ".png" 'copiamos el icono del control
        For n = 0 To controles.Count - 1
          If controles[n][0] = ctrl.text And controles[n][2] Then  'miramos si los elegidos tienen componentes requeridos
            requeridos &= controles[n][2] & ","
            Break
          Endif
        Next
        origen = IIf(IsDir(Application.path &/ ".src" &/ ctrl.text), Application.Path &/ ".src" &/ ctrl.text, Application.path &/ ".src" &/ strDir &/ ctrl.text & strExt) ' #### CAmbie acá ####
        Shell "ln -s \"" & origen & "\" \"" & proyecto & "/.src\"" Wait 'enlazamos el control
        If Exist(Application.path &/ ctrl.text & "_stuff") Then
          Shell "ln -s \"" & Application.path &/ ctrl.text & "_stuff\" \"" & proyecto & "\"" Wait 'enlazamos la carpeta de recursos del control si es que existe
        Endif
      Endif
    Endif
  Next
  Message("Terminado. " & IIf(requeridos, "No olvide añadir los componentes " & requeridos & " a su proyecto antes de compilarlo.", ""))

End

Public Sub btoCopy_Click()

  Dim proyecto, origen, requeridos As String
  Dim n As Integer
  Dim ctrl As Object
  Dim strExt As String  
  Dim strDir As String 

  n = Message.Question("Si Copias los controles a tu proyecto, los cambios que hagas en ellos sólo afectarán a tu proyecto y los cambios que se hagan a dbControles NO serán propagados al mismo", "Enlazar", "Cancelar")
  If n = 2 Then Return
  If Dialog.SelectDirectory() Then Return
  proyecto = Dialog.Path
  If Not Exist(proyecto &/ ".hidden/control") Then Shell "mkdir -p " & proyecto &/ ".hidden/control"
  For Each ctrl In Me.Controls
    If ctrl Is CheckBox Then
      If Left(LCase(ctrl.Text), 1) = "m" Then
        strExt = ".module"                  
        strDir = "xutilities"               
      Else                           
        strExt = ".class"            
        strDir = ""        
      End If
      If ctrl.Value Then
         Try Copy Application.path &/ ".hidden/control" &/ LCase(ctrl.text) & ".png" To proyecto &/ ".hidden/control" &/ LCase(ctrl.text) & ".png" 'copiamos el icono del control
         For n = 0 To controles.Count - 1
          If controles[n][0] = ctrl.text And controles[n][2] Then  'miramos si los elegidos tienen componentes requeridos
            requeridos &= controles[n][2] & ","
            Break
          Endif
        Next
        origen = IIf(IsDir(Application.path &/ ".src" &/ ctrl.text), Application.Path &/ ".src" &/ ctrl.text, Application.path &/ ".src" &/ strDir &/ ctrl.text & strExt) ' #### CAmbie acá ####
        Shell "cp -r \"" & origen & "\" \"" & proyecto & "/.src\"" Wait 'copiamos
        If Exist(Application.path &/ ctrl.text & "_stuff") Then
          Shell "cp -r \"" & Application.path &/ ctrl.text & "_stuff\" \"" & proyecto & "\"" Wait 'enlazamos la carpeta de recursos del control si es que existe
        Endif
      Endif
    Endif
  Next
  Message("Terminado. " & IIf(requeridos, "No olvide añadir los componentes " & requeridos & " a su proyecto antes de compilarlo.", ""))

End
